# Test rÃ¡pido de Python #6
# -----------------------------------------------
# Â¿CuÃ¡l es el resultado de este cÃ³digo?

# CÃ³digo:
print(0.1 + 0.2 == 0.3)

# Opciones:
# A) True
# B) False
# C) Error

# ðŸ‘‡ðŸ‘‡ðŸ‘‡ SPOILER: no sigas bajando si no quieres ver la respuesta ðŸ‘‡ðŸ‘‡ðŸ‘‡




































































































"""
Respuesta correcta: B) False

ExplicaciÃ³n:
Aunque podrÃ­as esperar que 0.1 + 0.2 sea igual a 0.3, en realidad no lo es.

Esto se debe a cÃ³mo los nÃºmeros de punto flotante se representan internamente
en la mayorÃ­a de los lenguajes de programaciÃ³n, incluido Python. Los nÃºmeros
decimales como 0.1 y 0.2 **no pueden representarse con precisiÃ³n exacta en binario**,
asÃ­ como 1/3 no puede representarse exactamente en decimal (0.333...).

Por ejemplo, cuando haces:

>>> print(0.1 + 0.2)
0.30000000000000004

Este pequeÃ±o error es suficiente para que la comparaciÃ³n `0.1 + 0.2 == 0.3`
devuelva `False`, porque:

>>> 0.1 + 0.2  â†’  0.30000000000000004  
>>> 0.3        â†’  0.3

Y Python detecta que estos dos valores no son exactamente iguales.

ðŸ§  Consejo: Si necesitas comparar nÃºmeros flotantes en Python,
es mejor usar un margen de error (tolerancia), por ejemplo:

abs((0.1 + 0.2) - 0.3) < 1e-9  # Esto devuelve True

Esto se conoce como comparaciÃ³n con tolerancia o comparaciÃ³n segura de floats. 
"""